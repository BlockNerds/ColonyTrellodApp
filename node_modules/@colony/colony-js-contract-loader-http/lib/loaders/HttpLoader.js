'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _assert = require('assert');

var _assert2 = _interopRequireDefault(_assert);

require('isomorphic-fetch');

var _colonyJsContractLoader = require('@colony/colony-js-contract-loader');

var _colonyJsContractLoader2 = _interopRequireDefault(_colonyJsContractLoader);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var HttpLoader = function (_ContractLoader) {
  (0, _inherits3.default)(HttpLoader, _ContractLoader);

  function HttpLoader() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        endpoint = _ref.endpoint,
        transform = _ref.transform;

    (0, _classCallCheck3.default)(this, HttpLoader);

    var _this = (0, _possibleConstructorReturn3.default)(this, (HttpLoader.__proto__ || Object.getPrototypeOf(HttpLoader)).call(this, { transform: transform }));

    (0, _assert2.default)(typeof endpoint === 'string' && endpoint, 'An `endpoint` option must be provided');
    _this._endpoint = endpoint;
    return _this;
  }

  (0, _createClass3.default)(HttpLoader, [{
    key: 'resolveEndpointResource',
    value: function resolveEndpointResource(_ref2) {
      var contractName = _ref2.contractName,
          contractAddress = _ref2.contractAddress,
          version = _ref2.version;

      return this._endpoint.replace('%%NAME%%', contractName || '').replace('%%ADDRESS%%', contractAddress || '')
      // `version` can be a string or an integer
      .replace('%%VERSION%%', version != null && (typeof version === 'string' || Number(parseInt(version, 10)) === version) ? version.toString() : '');
    }
  }, {
    key: '_load',
    value: function () {
      var _ref3 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
        var requiredProps = arguments[1];
        var throwError, response, json, contractDef;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                // Provide some context for errors thrown by lower-level functions
                throwError = function throwError(action, error) {
                  throw new Error('Unable to ' + action + ' for contract ' + (query.contractName || query.contractAddress || '') + ': ' + (error.message || error));
                };

                response = void 0;
                _context.prev = 2;
                _context.next = 5;
                return fetch(this.resolveEndpointResource(query));

              case 5:
                response = _context.sent;
                _context.next = 11;
                break;

              case 8:
                _context.prev = 8;
                _context.t0 = _context['catch'](2);

                throwError('fetch resource', _context.t0);

              case 11:
                json = void 0;
                _context.prev = 12;
                _context.t1 = response && response.json;

                if (!_context.t1) {
                  _context.next = 18;
                  break;
                }

                _context.next = 17;
                return response.json();

              case 17:
                _context.t1 = _context.sent;

              case 18:
                json = _context.t1;
                _context.next = 24;
                break;

              case 21:
                _context.prev = 21;
                _context.t2 = _context['catch'](12);

                throwError('get JSON', _context.t2);

              case 24:
                contractDef = void 0;

                try {
                  contractDef = this._transform(json, query, requiredProps);
                } catch (error) {
                  throwError('transform contract definition', error);
                }
                return _context.abrupt('return', contractDef);

              case 27:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this, [[2, 8], [12, 21]]);
      }));

      function _load() {
        return _ref3.apply(this, arguments);
      }

      return _load;
    }()
  }]);
  return HttpLoader;
}(_colonyJsContractLoader2.default);

exports.default = HttpLoader;
//# sourceMappingURL=HttpLoader.js.map