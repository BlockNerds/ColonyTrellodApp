{"version":3,"sources":["../src/paramTypes.js"],"names":["validate","value","Object","hasOwnProperty","call","convertInput","convertOutput","roleNumber","toNumber","keys","find","name"],"mappings":";;AAEA;;AACA;;AAEA;;AAEA,0CAAa,MAAb,EAAqB;AACnBA,UADmB,oBACVC,KADU,EACE;AACnB,WAAOC,OAAOC,cAAP,CAAsBC,IAAtB,mBAAkCH,KAAlC,CAAP;AACD,GAHkB;AAInBI,cAJmB,wBAINJ,KAJM,EAIsB;AACvC,WAAO,iBAAMA,KAAN,CAAP;AACD,GANkB;AAOnBK,eAPmB,yBAOLL,KAPK,EAOO;AACxB,QAAMM,aAAa,gCAAYN,KAAZ,IAAqBA,MAAMO,QAAN,EAArB,GAAwCP,KAA3D;AACA,WAAOC,OAAOO,IAAP,mBAAmBC,IAAnB,CAAwB;AAAA,aAAQ,iBAAMC,IAAN,MAAgBJ,UAAxB;AAAA,KAAxB,KAA+D,IAAtE;AACD;AAVkB,CAArB","file":"paramTypes.js","sourcesContent":["/* @flow */\n\nimport { isBigNumber } from '@colony/colony-js-utils';\nimport { addParamType } from '@colony/colony-js-contract-client';\n\nimport { ROLES } from './constants';\n\naddParamType('role', {\n  validate(value: any) {\n    return Object.hasOwnProperty.call(ROLES, value);\n  },\n  convertInput(value: $Keys<typeof ROLES>) {\n    return ROLES[value];\n  },\n  convertOutput(value: any) {\n    const roleNumber = isBigNumber(value) ? value.toNumber() : value;\n    return Object.keys(ROLES).find(name => ROLES[name] === roleNumber) || null;\n  },\n});\n"]}